// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { PasswordlessApiActionControllerAuthenticateData, PasswordlessApiActionControllerAuthenticateResponses, PasswordlessApiActionControllerAuthenticateErrors, PostApiServerV1ActionsQueryData, PasswordlessApiActionControllerShowData, PasswordlessApiActionControllerShowResponses, PasswordlessApiActionControllerShowErrors, GetApiServerV1AppData, GetApiServerV1AppAuthenticatorsData, GetApiServerV1UsersByIdData } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Authenticate an action
 * Authenticate an action
 */
export const passwordlessApiActionControllerAuthenticate = <ThrowOnError extends boolean = false>(options?: Options<PasswordlessApiActionControllerAuthenticateData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PasswordlessApiActionControllerAuthenticateResponses, PasswordlessApiActionControllerAuthenticateErrors, ThrowOnError>({
        url: '/api/server/v1/actions/authenticate',
        ...options
    });
};

export const postApiServerV1ActionsQuery = <ThrowOnError extends boolean = false>(options?: Options<PostApiServerV1ActionsQueryData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
        url: '/api/server/v1/actions/query',
        ...options
    });
};

/**
 * Show an action
 * Show an action
 */
export const passwordlessApiActionControllerShow = <ThrowOnError extends boolean = false>(options: Options<PasswordlessApiActionControllerShowData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<PasswordlessApiActionControllerShowResponses, PasswordlessApiActionControllerShowErrors, ThrowOnError>({
        url: '/api/server/v1/actions/{id}',
        ...options
    });
};

export const getApiServerV1App = <ThrowOnError extends boolean = false>(options?: Options<GetApiServerV1AppData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/api/server/v1/app',
        ...options
    });
};

export const getApiServerV1AppAuthenticators = <ThrowOnError extends boolean = false>(options?: Options<GetApiServerV1AppAuthenticatorsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/api/server/v1/app/authenticators',
        ...options
    });
};

export const getApiServerV1UsersById = <ThrowOnError extends boolean = false>(options?: Options<GetApiServerV1UsersByIdData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/api/server/v1/users/{id}',
        ...options
    });
};