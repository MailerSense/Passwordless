<div class="flex flex-col p-6 gap-6">
  <.box card>
    <.form_header title={gettext("Rules engine")} no_margin />
    <.p>
      Passwordless comes with a powerful rules engine that allows you to control the flow of your authentication process. Leveraging conditional logic, trusted users enjoy good customers flows while bad actors are stopped. We introduce following concepts:
    </.p>
    <.article_list items={[
      " <strong>Rule conditions</strong> must be met for the rule to be applied, like IP Address location or user action within last 30 minutes.",
      "<strong>Rule effects</strong> are the actions that will be taken if the rule is applied, like challenging the user via Email OTP."
    ]} />
  </.box>
  <.box card>
    <.form_header title={gettext("Default action")} no_margin />
    <.p>
      Rules are evaluated in the order they are defined. The first rule that matches will be applied. If no rules match, the default action will be taken. We recommend blocking the user action by default.
    </.p>
    <.form
      id="app-update-form"
      for={@form}
      phx-submit="save"
      phx-change="validate"
      phx-target={@myself}
    >
      <.inputs_for :let={settings} field={@form[:settings]}>
        <.field
          field={settings[:default_action]}
          type="select"
          options={@actions}
          icon_class={"pc-field-icon__icon " <> (
        case @default_action do
          :allow -> "text-success-600 dark:text-success-300"
          :block -> "text-danger-600 dark:text-danger-300"
        end
      )}
          icon_mapping={@icon_mapping}
          required
          required_asterix={false}
        />
      </.inputs_for>
    </.form>
  </.box>
  <.box card>
    <.form_header title={gettext("Basic examples")} no_margin />
    <.p>
      Below are some examples of commonly applied rules. You can use these as a starting point for your own rules.
    </.p>
    <.live_component
      id="rule-example"
      module={PasswordlessWeb.Components.MultiCodeBlock}
      codes={[
        %{
          tab: gettext("User Action"),
          language: :typescript,
          code: ~S"""
          {
            and: [true, false],
          }
          """
        }
      ]}
    />
  </.box>
  <.simple_table
    items={@rule_conditions}
    count={Enum.count(@rule_conditions)}
    title={gettext("Rule conditions")}
  >
    <:if_empty>{gettext("No %{models} defined", models: gettext("conditions"))}</:if_empty>
    <:col :let={syntax} field={:name}>
      <.code_line>
        {syntax.name}
      </.code_line>
    </:col>
    <:col :let={syntax} field={:description}>
      {Phoenix.HTML.raw(
        Passwordless.Templating.Markdown.to_html(syntax.description, %Earmark.Options{
          code_class_prefix: "language-",
          escape: false
        })
      )}
    </:col>
    <:col :let={syntax} field={:example}>
      <.live_component
        id={syntax.name}
        module={PasswordlessWeb.Components.MultiCodeBlock}
        codes={[
          %{
            tab: gettext("Typescript"),
            language: :typescript,
            code: syntax.example
          }
        ]}
      />
    </:col>
  </.simple_table>
  <.simple_table
    items={@rule_effects}
    count={Enum.count(@rule_effects)}
    title={gettext("Rule effects")}
  >
    <:if_empty>{gettext("No %{models} defined", models: gettext("effects"))}</:if_empty>
    <:col :let={syntax} field={:name}>
      <.code_line>
        {syntax.name}
      </.code_line>
    </:col>
    <:col :let={syntax} field={:description}>
      {Phoenix.HTML.raw(
        Passwordless.Templating.Markdown.to_html(syntax.description, %Earmark.Options{
          code_class_prefix: "language-",
          escape: false
        })
      )}
    </:col>
    <:col :let={syntax} field={:example}>
      <.live_component
        id={syntax.name}
        module={PasswordlessWeb.Components.MultiCodeBlock}
        codes={[
          %{
            tab: gettext("Typescript"),
            language: :typescript,
            code: syntax.example
          }
        ]}
      />
    </:col>
  </.simple_table>
</div>
