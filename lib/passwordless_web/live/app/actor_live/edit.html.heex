<.layout current_user={@current_user} current_page={:users} current_section={:app}>
  <.form id="edit-actor-form" for={@form} phx-change="validate" phx-submit="save">
    <.subpage_header field={@form[:name]}>
      <div class="flex gap-3">
        <.button
          to={~p"/app/users"}
          size="md"
          type="button"
          color="light"
          label={gettext("Cancel")}
          link_type="live_redirect"
        />
        <.button
          to={~p"/app/users/#{@actor}/edit/delete"}
          size="md"
          type="button"
          label={gettext("Delete")}
          icon="remix-delete-bin-line"
          color="danger"
          variant="outline"
          link_type="live_patch"
        />
        <.button
          size="md"
          type="submit"
          form="edit-actor-form"
          color="primary"
          label={gettext("Save")}
          icon="remix-save-line"
          disabled={not @form.source.valid? or Enum.empty?(@form.source.changes)}
        />
      </div>
    </.subpage_header>

    <.box padded class="mb-6">
      <.field type="checkbox" field={@form[:active]} disabled={@user_state == :stale} />
      <.p class="mb-6">
        <%= case @user_state do %>
          <% :active -> %>
            {gettext(
              "User is active and can use all authentication methods enabled for %{app}.",
              app: @current_app.name
            )}
          <% :locked -> %>
            {gettext("User is locked and cannot use any authentication methods.")}
          <% :stale -> %>
            {gettext("User is stale and will not be counted towards your monthly quota.")}
        <% end %>
      </.p>
      <.form_separator />
      <.field
        field={@form[:language]}
        type="select"
        options={@languages}
        icon_class="pc-select-input__flag"
        icon_mapping={@flag_mapping}
        required
        required_asterix={false}
        disabled={not @user_active}
      />
    </.box>
  </.form>
  <div class="flex flex-col gap-6">
    <.simple_table
      items={@emails}
      title={gettext("Emails")}
      action_link={~p"/app/users/#{@actor}/edit/email/new"}
    >
      <:if_empty>{gettext("No %{models} defined yet", models: gettext("emails"))}</:if_empty>
      <:col field={:address} label={gettext("Email")} body_class="w-full" />
      <:col :let={email} field={:authenticators}>
        <div class="flex items-center gap-2">
          <.badge size="sm" label="Magic link" color="cyan" />
          <.badge size="sm" label="Email OTP" color="pink" />
        </div>
      </:col>
      <:col :let={email} field={:verified} body_class="text-center">
        <.check_mark checked={email.verified} />
      </:col>
      <:col :let={email} field={:primary} body_class="text-center">
        <.check_mark checked={email.primary} />
      </:col>
      <:col actions></:col>
      <:actions :let={email}>
        <.icon_button
          to={~p"/app/users/#{@actor}/edit/email/#{email}/delete"}
          size="sm"
          icon="custom-trash"
          color="light"
          title={gettext("Remove")}
          link_type="live_patch"
        />
        <.icon_button
          to={~p"/app/users/#{@actor}/edit/email/#{email}/edit"}
          size="sm"
          icon="custom-edit"
          color="light"
          title={gettext("Edit")}
          link_type="live_patch"
        />
      </:actions>
    </.simple_table>

    <.simple_table
      items={@phones}
      title={gettext("Phones")}
      action_link={~p"/app/users/#{@actor}/edit/phone/new"}
    >
      <:if_empty>{gettext("No %{models} defined yet", models: gettext("phones"))}</:if_empty>
      <:col :let={phone} label={gettext("Phone")} body_class="w-full">
        <div class="flex items-center gap-2">
          <.icon name={"flag-#{String.downcase(phone.region)}"} class="pc-flag-icon" /> {phone.canonical}
        </div>
      </:col>
      <:col :let={email} field={:channels}>
        <div class="flex items-center gap-2">
          <.badge size="sm" label="SMS" color="purple" />
          <.badge size="sm" label="Whatsapp" color="indigo" />
        </div>
      </:col>
      <:col :let={phone} field={:verified} body_class="text-center">
        <.check_mark checked={phone.verified} />
      </:col>
      <:col :let={phone} field={:primary} body_class="text-center">
        <.check_mark checked={phone.primary} />
      </:col>
      <:col actions></:col>
      <:actions :let={phone}>
        <.icon_button
          to={~p"/app/users/#{@actor}/edit/phone/#{phone}/delete"}
          size="sm"
          icon="custom-trash"
          color="light"
          title={gettext("Remove")}
          link_type="live_patch"
        />
        <.icon_button
          to={~p"/app/users/#{@actor}/edit/phone/#{phone}/edit"}
          size="sm"
          icon="custom-edit"
          color="light"
          title={gettext("Edit")}
          link_type="live_patch"
        />
      </:actions>
    </.simple_table>

    <.simple_table
      items={@identities}
      title={gettext("Identities")}
      action_link={~p"/app/users/#{@actor}/edit/identity/new"}
    >
      <:if_empty>{gettext("No %{models} defined yet", models: gettext("identities"))}</:if_empty>
      <:col :let={identity} field={:system}>
        <.badge size="sm" label={identity.system} color={random_color(identity.system)} />
      </:col>
      <:col field={:user_id} body_class="w-full" />
      <:col actions></:col>
      <:actions :let={identity}>
        <.icon_button
          to={~p"/app/users/#{@actor}/edit/identity/#{identity}/delete"}
          size="sm"
          icon="custom-trash"
          color="light"
          title={gettext("Remove")}
          link_type="live_patch"
        />
        <.icon_button
          to={~p"/app/users/#{@actor}/edit/identity/#{identity}/edit"}
          size="sm"
          icon="custom-edit"
          color="light"
          title={gettext("Edit")}
          link_type="live_patch"
        />
      </:actions>
    </.simple_table>
  </div>
</.layout>

<%= case @live_action do %>
  <% :new_email -> %>
    <.live_component
      id={@live_action}
      title={@page_title}
      subtitle={@page_subtitle}
      email={Ecto.build_assoc(@actor, :emails)}
      app={@current_app}
      module={PasswordlessWeb.App.ActorLive.EmailComponent}
      live_action={@live_action}
      current_org={@current_org}
      current_app={@current_app}
      current_user={@current_user}
      return_to={~p"/app/users/#{@actor}/edit"}
    />
  <% :edit_email -> %>
    <.live_component
      id={@live_action}
      title={@page_title}
      subtitle={@page_subtitle}
      email={@email}
      app={@current_app}
      module={PasswordlessWeb.App.ActorLive.EmailComponent}
      live_action={@live_action}
      current_org={@current_org}
      current_app={@current_app}
      current_user={@current_user}
      return_to={~p"/app/users/#{@actor}/edit"}
    />
  <% :new_phone -> %>
    <.live_component
      id={@live_action}
      title={@page_title}
      subtitle={@page_subtitle}
      phone={Ecto.build_assoc(@actor, :phones)}
      app={@current_app}
      module={PasswordlessWeb.App.ActorLive.PhoneComponent}
      live_action={@live_action}
      current_org={@current_org}
      current_app={@current_app}
      current_user={@current_user}
      return_to={~p"/app/users/#{@actor}/edit"}
    />
  <% :edit_phone -> %>
    <.live_component
      id={@live_action}
      title={@page_title}
      subtitle={@page_subtitle}
      phone={@phone}
      app={@current_app}
      module={PasswordlessWeb.App.ActorLive.PhoneComponent}
      live_action={@live_action}
      current_org={@current_org}
      current_app={@current_app}
      current_user={@current_user}
      return_to={~p"/app/users/#{@actor}/edit"}
    />
  <% :new_identity -> %>
    <.live_component
      id={@live_action}
      title={@page_title}
      subtitle={@page_subtitle}
      identity={Ecto.build_assoc(@actor, :identities)}
      app={@current_app}
      module={PasswordlessWeb.App.ActorLive.IdentityComponent}
      live_action={@live_action}
      current_org={@current_org}
      current_app={@current_app}
      current_user={@current_user}
      return_to={~p"/app/users/#{@actor}/edit"}
    />
  <% :edit_identity -> %>
    <.live_component
      id={@live_action}
      title={@page_title}
      subtitle={@page_subtitle}
      identity={@identity}
      app={@current_app}
      module={PasswordlessWeb.App.ActorLive.IdentityComponent}
      live_action={@live_action}
      current_org={@current_org}
      current_app={@current_app}
      current_user={@current_user}
      return_to={~p"/app/users/#{@actor}/edit"}
    />
  <% :delete -> %>
    <.modal
      max_width="lg"
      title={@page_title}
      subtitle={@page_subtitle}
      variant="delete"
      hide_close_button
    >
      <div class="flex justify-end gap-3">
        <.button
          size="md"
          label="Cancel"
          color="light-flat"
          phx-click={JS.exec("data-cancel", to: "#modal")}
        />
        <.button
          icon="remix-delete-bin-line"
          size="md"
          label={gettext("Yes, Delete \"%{actor}\"", actor: @actor.name)}
          color="danger"
          phx-click="delete_actor"
        />
      </div>
    </.modal>
  <% :delete_email -> %>
    <.modal
      max_width="lg"
      title={@page_title}
      subtitle={@page_subtitle}
      variant="delete"
      hide_close_button
    >
      <div class="flex justify-end gap-3">
        <.button
          size="md"
          label="Cancel"
          color="light-flat"
          phx-click={JS.exec("data-cancel", to: "#modal")}
        />
        <.button
          icon="remix-delete-bin-line"
          size="md"
          label={gettext("Yes, Delete \"%{email}\"", email: @email.address)}
          color="danger"
          phx-click="delete_email"
        />
      </div>
    </.modal>
  <% :delete_phone-> %>
    <.modal
      max_width="lg"
      title={@page_title}
      subtitle={@page_subtitle}
      variant="delete"
      hide_close_button
    >
      <div class="flex justify-end gap-3">
        <.button
          size="md"
          label="Cancel"
          color="light-flat"
          phx-click={JS.exec("data-cancel", to: "#modal")}
        />
        <.button
          icon="remix-delete-bin-line"
          size="md"
          label={gettext("Yes, Delete \"%{phone}\"", phone: @phone.canonical)}
          color="danger"
          phx-click="delete_email"
        />
      </div>
    </.modal>
  <% _ -> %>
<% end %>
