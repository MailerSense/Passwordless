<.layout current_user={@current_user} current_page={:users} current_section={:app}>
  <.page_header title={gettext("Users")}>
    <div class="flex gap-3">
      <.button
        to={~p"/app/users/import"}
        size="md"
        color="light"
        label={gettext("Import")}
        icon="remix-download-line"
        link_type="live_patch"
      />
      <.button
        to={~p"/app/users/new"}
        size="md"
        color="primary"
        label={gettext("Create")}
        icon="remix-add-circle-line"
        link_type="live_patch"
      />
    </div>
  </.page_header>

  <.data_table
    meta={@meta}
    items={@actors}
    switch_items={
      [
        %{name: :all, label: gettext("All"), clear: true}
      ] ++ Enum.map(Actor.states(), &%{name: &1, label: Phoenix.Naming.humanize(&1)})
    }
  >
    <:if_empty>{gettext("No %{models} found", models: gettext("users"))}</:if_empty>
    <:info>
      <.action_stat
        legend={[
          %{color: "bg-blue-500", label: gettext("Magic Link")},
          %{color: "bg-pink-500", label: gettext("SMS")},
          %{color: "bg-purple-500", label: gettext("Email")},
          %{color: "bg-cyan-500", label: gettext("Authenticator")},
          %{color: "bg-emerald-500", label: gettext("WhatsApp")},
          %{color: "bg-amber-500", label: gettext("Passkey")}
        ]}
        items={[
          %{
            name: "Magic Link",
            value: 21323,
            progress: %{max: 100, value: 80, color: "info"},
            to: ~p"/app/reports"
          },
          %{
            name: "SMS",
            value: 11323,
            progress: %{max: 100, value: 30, color: "pink"},
            to: ~p"/app/reports"
          },
          %{
            name: "Other",
            value: 1323,
            progress: %{
              max: 100,
              items: [
                %{value: 20, color: "purple"},
                %{value: 20, color: "emerald"},
                %{value: 10, color: "amber"},
                %{value: 50, color: "neutral"}
              ]
            },
            to: ~p"/app/reports"
          }
        ]}
      />
    </:info>
    <:col field={:search} searchable filterable={[:==]} />
    <:col
      :let={actor}
      field={:name}
      sortable
      body_class="!font-medium !text-slate-900 dark:!text-white"
    >
      {Actor.handle(actor)}
    </:col>
    <:col field={:email} sortable />
    <:col field={:phone} sortable />
    <:col :let={actor} field={:state} sortable switchable filterable={[:==]}>
      {Phoenix.Naming.humanize(actor.state)}
    </:col>
    <:col :let={actor} label={gettext("Added")} field={:inserted_at} sortable>
      {format_date_time(actor.inserted_at)}
    </:col>
    <:col actions></:col>
    <:actions :let={actor}>
      <.icon_button
        icon="custom-trash"
        size="sm"
        color="light"
        title={gettext("Remove")}
        link_type="live_patch"
        to={apply_filters(@filters, @meta, ~p"/app/users/#{actor}/delete")}
      />
      <.icon_button
        size="sm"
        icon="custom-edit"
        color="light"
        title={gettext("Edit")}
        link_type="live_patch"
        to={apply_filters(@filters, @meta, ~p"/app/users/#{actor}/edit")}
      />
    </:actions>
  </.data_table>
</.layout>

<%= case @live_action do %>
  <% :new -> %>
    <.live_component
      id={@live_action}
      title={@page_title}
      module={PasswordlessWeb.App.ActorLive.FormComponent}
      actor={Ecto.build_assoc(@current_app, :actors)}
      live_action={@live_action}
      current_org={@current_org}
      current_user={@current_user}
      return_to={apply_filters(@filters, @meta, ~p"/app/users")}
    />
  <% :edit -> %>
    <.live_component
      id={@live_action}
      title={@page_title}
      module={PasswordlessWeb.App.ActorLive.FormComponent}
      actor={@actor}
      live_action={@live_action}
      current_org={@current_org}
      current_user={@current_user}
      return_to={apply_filters(@filters, @meta, ~p"/app/users")}
    />
  <% :delete -> %>
    <.modal
      max_width="lg"
      title={@page_title}
      subtitle={@page_subtitle}
      variant="delete"
      hide_close_button
    >
      <div class="flex justify-end gap-3">
        <.button
          size="md"
          label="Cancel"
          color="light"
          phx-click={JS.exec("data-cancel", to: "#modal")}
        />
        <.button
          icon="remix-delete-bin-line"
          size="md"
          label={gettext("Yes, Delete \"%{actor}\"", actor: Actor.handle(@actor))}
          color="danger"
          phx-click="delete_actor"
          phx-value-id={@actor.id}
        />
      </div>
    </.modal>
  <% :import -> %>
    <.live_component
      id={@live_action}
      title={@page_title}
      module={PasswordlessWeb.App.ActorLive.ImportComponent}
      live_action={@live_action}
      current_org={@current_org}
      current_user={@current_user}
      return_to={apply_filters(@filters, @meta, ~p"/app/users")}
    />
  <% _ -> %>
<% end %>
