<div class="flex flex-col p-6 gap-6">
  <.form
    id="edit-magic-link-form"
    for={@form}
    phx-target={@myself}
    phx-submit="save"
    phx-change="validate"
    class="flex flex-col gap-6"
  >
    <.alert :if={Domain.system?(@domain)} color="info" with_icon>
      Do you want to send branded emails?
      <.a
        to={~p"/domain"}
        label={gettext("Set up domain")}
        style="link"
        class="inline-flex"
        link_type="live_redirect"
      />
    </.alert>
    <.box padded>
      <.form_header title={gettext("Magic link")} />
      <.p class="mb-6">
        Magic link allows users to sign in without a password. When enabled, users will receive an email with a link that will sign them in.
      </.p>
      <.field type="checkbox" field={@form[:enabled]} />
      <div class="grid gap-6 grid-cols-1 2xl:grid-cols-2 mb-6">
        <.field
          field={@form[:sender_name]}
          label={gettext("Name")}
          disabled={not @enabled}
          required
          wrapper_class="mb-0!"
        />
        <.field
          field={@form[:sender]}
          label={gettext("Email")}
          suffix={Domain.email_suffix(@domain)}
          readonly={Domain.system?(@domain)}
          disabled={not @enabled}
          required
          wrapper_class="mb-0!"
        />
      </div>
      <.email_preview
        to={~p"/emails/#{@email_template}/en/edit?return_to=#{~p"/authenticators/magic-link"}"}
        name={gettext("Edit email template")}
        preview={@preview}
        link_type="live_redirect"
      />
      <.a
        to={~p"/emails/#{@email_template}/en/edit?return_to=#{~p"/authenticators/magic-link"}"}
        label={gettext("Edit email template")}
        style="link"
        link_type="live_redirect"
      />
      <.form_separator />
      <div class="grid gap-6 grid-cols-1 2xl:grid-cols-2">
        <.field
          field={@form[:expires]}
          type="number"
          min="1"
          max="30"
          prefix={gettext("After")}
          suffix={gettext("minutes")}
          disabled={not @enabled}
          required
          wrapper_class="mb-0!"
        />
        <.field
          field={@form[:resend]}
          type="number"
          min="30"
          max="300"
          prefix={gettext("After")}
          suffix={gettext("seconds")}
          disabled={not @enabled}
          required
          wrapper_class="mb-0!"
        />
      </div>
    </.box>
    <.box padded>
      <.form_header title={gettext("Fingerprint device")} />
      <.p class="mb-6">
        You can enable device fingerprinting to ensure only the user who requested the magic link is the one to also open it. This requires you to provide identifiers -
        <.code_line>deviceId</.code_line>,
        <.code_line>ipAddress</.code_line>
        or
        <.code_line>userAgent</.code_line>
        - in the API calls for the magic link authenticator. You can provide any of them, and Passwordless will use them to uniquely identify the device. Below you can choose which factors are taken into consideration.
      </.p>
      <.field
        type="checkbox"
        field={@form[:fingerprint_device]}
        label={gettext("Enabled")}
        disabled={not @enabled}
      />
      <.field
        :if={@fingerprint_device}
        type="radio-card-group"
        field={@form[:fingerprint_factors]}
        options={@fingerprint_factors}
        required
        size="sm"
        variant="outline"
        disabled={not @enabled}
      />
    </.box>
    <.box padded>
      <.form_header title={gettext("Redirect URLs")} />
      <.p class="mb-6">
        The redirect URL is the URL to which the user will be redirected after clicking the magic link. You can restrict the redirect URLs to a specific domain. This will help prevent phishing attacks.
      </.p>
      <div class="pc-form-field-wrapper">
        <.field_label required>{gettext("Allowed URLs")}</.field_label>
        <div class="flex flex-col gap-y-2">
          <.inputs_for :let={f} field={@form[:redirect_urls]}>
            <input type="hidden" name="magic_link[redirect_urls_sort][]" value={f.index} />
            <div class="flex items-center grow gap-2">
              <.field
                type="url"
                label=""
                field={f[:url]}
                required
                disabled={not @enabled}
                wrapper_class="mb-0! w-full grow"
              >
                <:action>
                  <.icon_form_button
                    size="sm"
                    name="magic_link[redirect_urls_drop][]"
                    type="button"
                    icon="custom-trash"
                    color="light"
                    title={gettext("Remove")}
                    value={f.index}
                    event={JS.dispatch("change")}
                    disabled={not @enabled or f.index == 0}
                  />
                </:action>
              </.field>
            </div>
          </.inputs_for>
        </div>
        <div class="flex mt-1.5">
          <.button
            size="xs"
            type="button"
            color="light"
            icon="remix-add-circle-line"
            label={gettext("Add redirect URL")}
            name="magic_link[redirect_urls_sort][]"
            value="new"
            disabled={not @enabled}
            phx-click={JS.dispatch("change")}
          />
        </div>
        <input type="hidden" name="magic_link[redirect_urls_drop][]" />
      </div>
    </.box>
  </.form>

  <.box card>
    <.form_header title="API - Authenticate with Magic link" no_margin />
    <.p>
      The API allows you to authenticate users with a magic link. The magic link is a one-time use link that will sign the user in. The link is valid for a limited time and can only be used once.
    </.p>
    <.code_block
      language={:typescript}
      code={
        ~s"""
        import { Passwordless, Challenge } from "@passwordless/tools";

        const action = Passwordless.authenticate({
          action: "login",
          actor: {
            username: "1234567890",
            emails: [
              {
                address: "user@example.com"
              },
            ],
          },
          rules: [
            {
              if: true,
              then: [
                {
                  challenge: Challenge.MAGIC_LINK,
                  link_target: "https://api.mycompany.com/auth/magic-link",
                }
              ],
            },
          ],
        });
        """
      }
    />
    <.p>
      The code above create an Email OTP challenge and delivers the code to the user. Then, the user provides the code back to the application:
    </.p>
    <.code_block
      language={:typescript}
      code={
        ~s"""
        import { Passwordless, Action } from "@passwordless/tools";

        const action = Passwordless.continue({
          data: {
            magic_link_code: code,
          },
        });

        if (action.state === Action.ALLOW) {
          console.log("User is allowed to continue");
        }
        """
      }
    />
    <.a
      to={~p"/embed/api"}
      label={gettext("Read full documentation")}
      style="link"
      link_type="live_redirect"
    />
  </.box>
</div>
