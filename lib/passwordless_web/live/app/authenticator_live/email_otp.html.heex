<div>
  <.form
    id="edit-email-form"
    for={@form}
    phx-target={@myself}
    phx-submit="save"
    phx-change="validate"
    class="p-6"
  >
    <.form_header title={gettext("Email OTP")} />
    <.p class="mb-6">
      Email OTP is a one-time code sent to the user via email. This code can the be used to sign in. The code is valid for a limited time and can only be used once.
    </.p>
    <.field type="checkbox" field={@form[:enabled]} />
    <.alert :if={Domain.system?(@domain)} color="info" class="mb-6" with_icon>
      Do you want to send branded emails?
      <.a
        to={~p"/domain"}
        label={gettext("Set up domain")}
        style="link"
        class="inline-flex"
        link_type="live_redirect"
      />
    </.alert>
    <div class="grid gap-6 grid-cols-1 xl:grid-cols-2 mb-6">
      <.field field={@form[:sender_name]} disabled={not @enabled} required wrapper_class="mb-0!" />
      <.field
        field={@form[:sender]}
        label={gettext("Sender email")}
        suffix={Domain.email_suffix(@domain)}
        readonly={Domain.system?(@domain)}
        disabled={not @enabled}
        required
        wrapper_class="mb-0!"
      />
    </div>
    <.email_preview
      to={~p"/emails/#{@email_template}/en/edit?return_to=#{~p"/authenticators/email-otp"}"}
      name={gettext("Edit email template")}
      preview={@preview}
      link_type="live_redirect"
    />
    <div class="flex items-center gap-3 flex-wrap">
      <.a
        to={~p"/emails/#{@email_template}/en/edit?return_to=#{~p"/authenticators/email-otp"}"}
        label={gettext("Edit email template")}
        style="link"
        link_type="live_redirect"
      />
    </div>
    <.form_separator />
    <.form_header title={gettext("Lifetime")} />
    <.p class="mb-6">
      The expiration time is the time after which the OTP code will no longer be valid. It is recommended to set a short expiration time for the OTP code. This will help prevent unauthorized access.
    </.p>
    <.field
      field={@form[:expires]}
      type="number"
      min="0"
      max="60"
      prefix={gettext("After")}
      suffix={gettext("minutes")}
      disabled={not @enabled}
      required
    />
    <.form_separator />
    <.form_header title="API - Authenticate with Email OTP" />
    <.code_block
      class="mb-6"
      language={:typescript}
      code={
        ~s"""
        import { Passwordless, Challenge } from "@passwordless/tools";

        const action = Passwordless.authenticate({
          action: "login",
          actor: {
            username: "1234567890",
            emails: [
              {
                address: "user@example.com"
              },
            ],
          },
          rules: [
            {
              if: true, then: [{ challenge: Challenge.EMAIL_OTP }],
            },
          ],
        });
        """
      }
    />
    <.p class="mb-6">
      The code above create an Email OTP challenge and delivers the code to the user. Then, the user provides the code back to the application:
    </.p>
    <.code_block
      class="mb-6"
      language={:typescript}
      code={
        ~s"""
        import { Action, Passwordless } from "@passwordless/tools";

        const action = Passwordless.continue({
          action: {id: action.id},
          data: {
            otp_code: "123456",
          },
        });

        if (action.state === Action.ALLOW) {
          console.log("User is allowed to continue");
        }
        """
      }
    />
    <.a
      to={~p"/embed/api"}
      label={gettext("Read full documentation")}
      style="link"
      link_type="live_redirect"
    />
  </.form>
</div>
