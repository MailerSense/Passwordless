<div class="flex flex-col p-6 gap-6">
  <.form
    id="edit-email-form"
    for={@form}
    phx-target={@myself}
    phx-submit="save"
    phx-change="validate"
    class="flex flex-col gap-6"
  >
    <.alert :if={Domain.system?(@domain)} color="info" with_icon>
      Do you want to send branded emails?
      <.a
        to={~p"/domain"}
        label={gettext("Set up domain")}
        style="link"
        class="inline-flex"
        link_type="live_redirect"
      />
    </.alert>
    <.box padded>
      <.form_header title={gettext("Email OTP")} />
      <.p class="mb-6">
        Email OTP is a one-time code sent to the user via email. This code can the be used to sign in. The code is valid for a limited time and can only be used once.
      </.p>
      <.field type="checkbox" field={@form[:enabled]} />
    </.box>
    <.box padded>
      <.form_header title={gettext("Delivery")} />
      <div class="grid gap-6 grid-cols-1 xl:grid-cols-2 mb-6">
        <.field
          field={@form[:sender_name]}
          disabled={not @enabled}
          required
          wrapper_class="mb-0!"
        />
        <.field
          field={@form[:sender]}
          label={gettext("Sender email")}
          suffix={Domain.email_suffix(@domain)}
          readonly={Domain.system?(@domain)}
          disabled={not @enabled}
          required
          wrapper_class="mb-0!"
        />
      </div>
      <.email_preview
        to={~p"/emails/#{@email_template}/en/edit?return_to=#{~p"/authenticators/email-otp"}"}
        name={gettext("Edit email template")}
        preview={@preview}
        link_type="live_redirect"
      />
      <div class="flex items-center gap-3 flex-wrap">
        <.a
          to={~p"/emails/#{@email_template}/en/edit?return_to=#{~p"/authenticators/email-otp"}"}
          label={gettext("Edit email template")}
          style="link"
          link_type="live_redirect"
        />
      </div>
      <.form_separator />
      <.form_header title={gettext("Preferences")} />
      <.field
        field={@form[:expires]}
        label={gettext("OTP expires")}
        type="number"
        min="0"
        max="60"
        prefix={gettext("After")}
        suffix={gettext("minutes")}
        disabled={not @enabled}
        required
      />
      <.field
        field={@form[:resend]}
        label={gettext("Request new OTP")}
        type="number"
        min="30"
        max="300"
        prefix={gettext("After at least")}
        suffix={gettext("seconds")}
        disabled={not @enabled}
        required
      />
    </.box>
  </.form>
  <.box card>
    <.form_header title="API - Authenticate with Email OTP" no_margin />
    <.code_block
      language={:typescript}
      code={
        ~s"""
        import { Passwordless, Action } from "@passwordless/tools";

        const action: Action = Passwordless.authenticate({
          action: "login",
          actor: {
            username: "1234567890",
            emails: [
              { address: "user@example.com" },
            ],
          },
          rules: [
            {
              if: true, then: [{ challenge: Passwordless.EMAIL_OTP }],
            },
          ],
        });
        """
      }
    />
    <.p>
      The code above create an Email OTP challenge and delivers the code to the user. Then, the user provides the code back to the application:
    </.p>
    <.code_block
      language={:typescript}
      code={
        ~s"""
        import { Passwordless } from "@passwordless/tools";

        const action = Passwordless.continue({
          action: {id: action.id},
          data: {
            otp_code: "123456",
          },
        });

        if (action.state === Passwordless.ALLOW) {
          console.log("User is allowed to continue");
        }
        """
      }
    />
    <.a
      to={~p"/embed/api"}
      label={gettext("Read full documentation")}
      style="link"
      link_type="live_redirect"
    />
  </.box>
</div>
