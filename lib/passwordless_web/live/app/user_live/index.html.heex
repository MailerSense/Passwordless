<.layout current_user={@current_user} current_page={:users} current_section={:app}>
  <div class="flex flex-col gap-6 p-6">
    <.data_table
      meta={@meta}
      items={@users}
      title={gettext("All users")}
      search_placeholder={gettext("Search by Email or User ID")}
    >
      <:if_empty>{gettext("No %{models} found", models: gettext("users"))}</:if_empty>
      <:col field={:search} searchable filterable={[:==]} />
      <:col :let={user} field={:email} sortable>
        <.a
          to={apply_filters(@filters, @meta, ~p"/users/#{user}/edit")}
          label={User.email(user)}
          style="link"
          link_type="live_redirect"
        />
      </:col>
      <:col :let={user} field={:last_action} label={gettext("Last Action")}>
        <div class="flex flex-col">
          <span class="text-slate-900 dark:text-white">Test action</span>
          <span class="text-slate-600 dark:text-slate-300">
            {format_date(user.inserted_at)}
          </span>
        </div>
      </:col>
      <:col :let={user} field={:result}>
        <.badge with_dot size="sm" label={gettext("Allow")} color="success" />
      </:col>

      <:col :let={user} field={:success_rate} label={gettext("Allow Rate")}>
        <.progress
          label
          color="primary"
          value={(0.3 || 0.0) * 100.0}
          max={100}
          class="flex-grow min-w-16"
        />
      </:col>

      <:col actions></:col>
      <:actions :let={user}>
        <.icon_button
          to={apply_filters(@filters, @meta, ~p"/users/#{user}/delete")}
          size="sm"
          icon="custom-trash"
          color="light"
          title={gettext("Remove")}
          link_type="live_patch"
        />
        <.icon_button
          to={apply_filters(@filters, @meta, ~p"/users/#{user}/edit")}
          size="sm"
          icon="custom-edit"
          color="light"
          title={gettext("Edit")}
          link_type="live_patch"
        />
      </:actions>
      <:header_actions>
        <div class="flex gap-3">
          <.button
            to={apply_filters(@filters, @meta, ~p"/users/import")}
            color="light"
            label={gettext("Import")}
            icon="remix-download-line"
            link_type="live_patch"
          />
          <.button
            to={apply_filters(@filters, @meta, ~p"/users/new")}
            color="primary"
            label={gettext("Create")}
            icon="remix-add-circle-line"
            link_type="live_patch"
          />
        </div>
      </:header_actions>
    </.data_table>
  </div>
</.layout>

<%= case @live_action do %>
  <% :new -> %>
    <.live_component
      id={@live_action}
      title={@page_title}
      subtitle={@page_subtitle}
      user={%User{}}
      module={PasswordlessWeb.App.UserLive.FormComponent}
      live_action={@live_action}
      current_org={@current_org}
      current_app={@current_app}
      current_user={@current_user}
      return_to={apply_filters(@filters, @meta, ~p"/users")}
    />
  <% :edit -> %>
    <.live_component
      id={@live_action}
      title={@page_title}
      subtitle={@page_subtitle}
      user={@user}
      module={PasswordlessWeb.App.UserLive.EditComponent}
      live_action={@live_action}
      current_org={@current_org}
      current_app={@current_app}
      current_user={@current_user}
      return_to={apply_filters(@filters, @meta, ~p"/users")}
    />
  <% :delete -> %>
    <.modal
      max_width="lg"
      title={@page_title}
      subtitle={@page_subtitle}
      variant="delete"
      hide_close_button
    >
      <div class="flex justify-end gap-3">
        <.button
          size="md"
          label="Cancel"
          color="light"
          phx-click={JS.exec("data-cancel", to: "#modal")}
        />
        <.button
          icon="remix-delete-bin-line"
          size="md"
          label={gettext("Yes, Delete \"%{user}\"", user: Util.truncate(User.handle(@user)))}
          color="danger"
          phx-click="delete_user"
          phx-value-id={@user.id}
        />
      </div>
    </.modal>
  <% :import -> %>
    <.live_component
      id={@live_action}
      title={@page_title}
      subtitle={@page_subtitle}
      module={PasswordlessWeb.App.UserLive.ImportComponent}
      live_action={@live_action}
      current_org={@current_org}
      current_user={@current_user}
      return_to={apply_filters(@filters, @meta, ~p"/users")}
    />
  <% _ -> %>
<% end %>
